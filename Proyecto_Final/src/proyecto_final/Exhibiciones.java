/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto_final;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author cesarromanzuniga
 */
public class Exhibiciones extends javax.swing.JFrame {
    
    private int open_time = 10;
    private int close_time = 15;
    private int event_id;

    /**
     * Creates new form Exhibiciones
     */
    public Exhibiciones() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSalasList();
        jEventContainer.setVisible(false);
        jEdit.setVisible(false);
    }
    
    public Exhibiciones(int id){
        event_id = id;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSalasList();
        jEventContainer.setVisible(true);
        jButton2.setVisible(false);
        jButton1.setVisible(false);
        jEdit.setVisible(true);
        
        Base base = new Base();
        ResultSet resultado = base.getEvento(id);
        
        try {
                String fecha = resultado.getString("fecha");
                String hora = resultado.getString("hora");
                String titulo = resultado.getString("titulo");
                int id_sala = Integer.parseInt(resultado.getString("id_sala"));
                setHorasList(open_time, close_time, id_sala, fecha, false, hora);

                jLabel1.setText("Editar " + titulo);
                jTitulo.setText(titulo);

                jSala.setSelectedIndex(id_sala-1);
                jHorario.setSelectedItem(hora);
                System.out.println(fecha);
                // jFecha.setDate(fecha);
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse(fecha);
                jFecha.setDate(date);
            
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(Exhibiciones.class.getName()).log(Level.SEVERE, null, ex);
        }

        base.closeBase();
    }
    
    public void setSalasList(){
        jSala.removeAllItems();
        try {
            Base base = new Base();
            ResultSet salas = base.getSalas();
            
            while(salas.next()){
                jSala.addItem("Sala " + salas.getString("Id")); 
            }       
            base.closeBase();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Las Salas no pudieron ser encontradas, favor de intentarlo mas tarde", "Error", JOptionPane.INFORMATION_MESSAGE);

        }
        
    }
    
    public void setHorasList(int first, int last, int sala_id, String fecha_evento, Boolean newEvent, String hrs){
//      Remove any possible items  
        jHorario.removeAllItems();

        if(newEvent == false){
            jHorario.addItem(hrs);
        }
        
//      Recibe las horas ocupadas en la sala
        Base base = new Base();
        
        try {
        for(int hora = first;hora<=last;hora++ ){
            
            ResultSet busyHours = base.busyHours(sala_id, fecha_evento);
            String whole = hora + ":00";
            String half = hora + ":30";
            Boolean boolW = false;
            Boolean boolH= false;
            
            while(busyHours.next()){
                
                String busyHour = busyHours.getString("hora");
                if (whole.equals(busyHour)){
                    System.out.println(busyHours.getString("hora"));
                    boolW = true;
                }
                if (half.equals(busyHour)){
                    System.out.println(busyHours.getString("hora"));
                    boolH = true;
                } 
            }
            if (boolW == false){
                jHorario.addItem(whole);
            }
            if (boolH == false){
                jHorario.addItem(half);
            }
            base.closeBase();
        }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex.toString(), "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jFecha = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSala = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jEventContainer = new javax.swing.JPanel();
        jHorario = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTitulo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Registra Nueva Exhibicion");

        jFecha.setDateFormatString("yyyy-MM-dd");

        jLabel2.setText("Fecha del evento");

        jLabel5.setText("Sala");

        jSala.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jSalaItemStateChanged(evt);
            }
        });
        jSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalaActionPerformed(evt);
            }
        });

        jButton2.setText("Buscar horarios");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Horario del evento");

        jLabel4.setText("Titulo del evento");

        jButton1.setText("Crear Exhibicion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jEventContainerLayout = new javax.swing.GroupLayout(jEventContainer);
        jEventContainer.setLayout(jEventContainerLayout);
        jEventContainerLayout.setHorizontalGroup(
            jEventContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEventContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jEventContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(42, 42, 42)
                .addGroup(jEventContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTitulo)
                    .addComponent(jHorario, 0, 150, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jEventContainerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jEventContainerLayout.setVerticalGroup(
            jEventContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEventContainerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jEventContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jEventContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jEdit.setText("Editar Exhibicion");
        jEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEventContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(131, 131, 131)
                                .addComponent(jSala, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jEdit)
                        .addGap(8, 8, 8)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEventContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEdit)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalaActionPerformed
    }//GEN-LAST:event_jSalaActionPerformed

    private void jSalaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jSalaItemStateChanged
       
    }//GEN-LAST:event_jSalaItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int sala_id = jSala.getSelectedIndex() + 1;
        Date fecha = jFecha.getDate();
        if (jFecha.getDate() != null){
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String fecha_evento = dateFormat.format(fecha);
        
            setHorasList(open_time,close_time, sala_id, fecha_evento, true, "");
            jEventContainer.setVisible(true);
        }else{
           JOptionPane.showMessageDialog(null,"Por favor selecicciona una fecha", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        Conexion a base
        Base base = new Base();
        
//        Obtener valores
        int sala = jSala.getSelectedIndex() +1;
        Date fecha = jFecha.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String fecha_evento = dateFormat.format(fecha);
        String horario = jHorario.getSelectedItem().toString();
        String titulo = jTitulo.getText();
        
        String response = base.addEvento(fecha_evento, horario, titulo, sala);
        
        if(response == "Evento Creado con Exito"){
            JOptionPane.showMessageDialog(null,"El evento has ido agregado a la lista", "Exito", JOptionPane.INFORMATION_MESSAGE);
            jTitulo.setText("");
            jEventContainer.setVisible(false);
                    
        }else{
            JOptionPane.showMessageDialog(null,"El evento no ha podido ser agregado, por favor intentalo mas tarde.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }

        base.closeBase();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditActionPerformed
        Base base = new Base();
        
        //        Obtener valores
        String sala = Integer.toString(jSala.getSelectedIndex() +1);
        Date fecha = jFecha.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String fecha_evento = dateFormat.format(fecha);
        String horario = jHorario.getSelectedItem().toString();
        String titulo = jTitulo.getText();


        try {
            base.editEvento("hora", event_id, horario);
            base.editEvento("fecha", event_id, fecha_evento);
            base.editEvento("titulo", event_id, titulo);
            base.editEvento("id_sala", event_id, sala);
            JOptionPane.showMessageDialog(null,"El evento has ido editado con Exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"El evento no ha podido ser editado por completo.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }

        base.closeBase();
        
    }//GEN-LAST:event_jEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Exhibiciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Exhibiciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Exhibiciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Exhibiciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Exhibiciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jEdit;
    private javax.swing.JPanel jEventContainer;
    private com.toedter.calendar.JDateChooser jFecha;
    private javax.swing.JComboBox<String> jHorario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> jSala;
    private javax.swing.JTextField jTitulo;
    // End of variables declaration//GEN-END:variables
}
